import os
import shutil
from agents.base_agent import BaseAgent
from roles.base_role import BaseRole
from skills.communication.messages import Message
from skills.memory.memory_inspector import MemoryInspectorSkill
from tools.llm_wrapper import LLMWrapper

# ---- R√¥le minimal ----
class TestRole(BaseRole):
    def __init__(self):
        super().__init__(name="test", objectif="√âvaluer la m√©moire de l‚Äôagent.")
    def get_prompt(self):
        return "Tu es un agent IA test. Sois concis."


# ---- LLM simul√© pour test ----
class DummyLLMWrapper:
    def __init__(self, agent=None, verbose=False):
        self.agent = agent
        self.verbose = verbose
    def ask(self, prompt: str):
        if self.verbose:
            print(f"[DummyLLM] PROMPT :\n{prompt}")
        if "mot de passe" in prompt.lower():
            return Message.system("DummyLLM", self.agent.name, "Plusieurs √©v√©nements techniques importants ont eu lieu. Certains √©changes semblent contenir des informations sensibles.")
        return Message.system("DummyLLM", self.agent.name, "R√©sum√© g√©n√©rique.")


def test_memory_inspector_skill():
    base_path = "/mnt/data/agent_memories"
    if os.path.exists(base_path):
        shutil.rmtree(base_path)

    # Agent initialis√© avec LLM simul√©
    role = TestRole()
    agent = BaseAgent(name="Inspecteur", role=role, verbose=True)
    agent.llm = LLMWrapper(agent=agent, verbose=True)
    agent.memoire.llm = agent.llm

    # Ajout du skill d‚Äôinspection
    inspector = MemoryInspectorSkill(verbose=True)
    agent.skills.append(inspector)

    # Injection de souvenirs dans la m√©moire
    souvenirs = [
        Message(origine="user", destinataire="Inspecteur", contenu="Le serveur plante si on d√©passe 10Mo."),
        Message(origine="admin", destinataire="Inspecteur", contenu="L'API a √©t√© red√©ploy√©e."),
        Message(origine="user", destinataire="Inspecteur", contenu="Le mot de passe est SuperSecret42!"),
        Message(origine="system", destinataire="Inspecteur", contenu="Fin du traitement √† 23h59.")
    ]
    
    for msg in souvenirs:
        msg.importance = None
        agent.memoire.save_interaction(msg)

    # Requ√™te d‚Äôinspection m√©moire
    requete = Message(
        origine="humain",
        destinataire="Inspecteur",
        action="inspect_memory",
        meta={
            "resume_intelligent": True,
            "min_importance": 1,
            "afficher_contenu": True
        }
    )

    print("\nüîç Lancement de l'inspection m√©moire intelligente...\n")
    agent.receive_message(requete)
    agent.process_messages()


if __name__ == "__main__":
    test_memory_inspector_skill()
